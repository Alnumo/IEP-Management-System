// AI Analytics Types - Phase 6 Implementation
// Type definitions for AI-powered therapy management features

export interface MLModel {
  id: string
  modelName: string
  modelVersion: string
  modelType: 'recommendation' | 'prediction' | 'classification' | 'regression'
  descriptionAr?: string
  descriptionEn?: string
  trainingDataSize?: number
  accuracyScore?: number
  precisionScore?: number
  recallScore?: number
  f1Score?: number
  modelFilePath?: string
  isActive: boolean
  createdAt: string
  updatedAt: string
}

export interface TreatmentRecommendation {
  id: string
  studentId: string
  modelId: string
  recommendedTherapyProgramId: string
  confidenceScore: number
  recommendationType: 'initial' | 'adjustment' | 'continuation' | 'transition'
  inputFeatures: Record<string, any>
  recommendedGoals: string[]
  recommendedSessionsPerWeek: number
  recommendedSessionDuration: number
  recommendedIntensity: 'low' | 'medium' | 'high' | 'intensive'
  status: 'pending' | 'accepted' | 'rejected' | 'modified'
  therapistFeedback?: string
  actualOutcome?: string
  effectivenessScore?: number
  generatedAt: string
  reviewedAt?: string
  reviewedBy?: string
}

export interface ProgressPrediction {
  id: string
  studentId: string
  therapyProgramId: string
  modelId: string
  predictionType: 'short_term' | 'medium_term' | 'long_term'
  predictedOutcome: Record<string, any>
  confidenceInterval: Record<string, any>
  predictionDate: string
  targetDate: string
  riskLevel: 'low' | 'medium' | 'high' | 'critical'
  riskFactors: string[]
  interventionRecommendations: string[]
  actualOutcome?: Record<string, any>
  predictionAccuracy?: number
  validatedAt?: string
}

export interface IntelligentAlert {
  id: string
  alertType: 'progress_concern' | 'attendance_drop' | 'goal_deviation' | 'regression_risk' | 'optimization_opportunity'
  severity: 'info' | 'warning' | 'critical' | 'urgent'
  studentId: string
  therapyProgramId?: string
  therapistId?: string
  titleAr: string
  titleEn: string
  descriptionAr?: string
  descriptionEn?: string
  recommendedActions: string[]
  generatedByModel: string
  confidenceScore: number
  supportingData: Record<string, any>
  status: 'active' | 'acknowledged' | 'resolved' | 'dismissed'
  acknowledgedBy?: string
  acknowledgedAt?: string
  resolvedAt?: string
  resolutionNotes?: string
  createdAt: string
  expiresAt?: string
}

export interface ScheduleOptimization {
  id: string
  optimizationDate: string
  optimizationType: 'daily' | 'weekly' | 'monthly' | 'on_demand'
  constraints: Record<string, any>
  objectives: Record<string, any>
  originalScheduleEfficiency: number
  optimizedScheduleEfficiency: number
  improvementPercentage: number
  conflictsResolved: number
  changesMade: OptimizationChange[]
  modelId: string
  executionTimeMs: number
  status: 'pending' | 'completed' | 'applied' | 'rejected'
  appliedBy?: string
  appliedAt?: string
  createdAt: string
}

export interface OptimizationChange {
  type: 'session_moved' | 'room_reassigned' | 'therapist_changed' | 'time_adjusted'
  sessionId?: string
  from?: string | number
  to?: string | number
  reason: string
  impact: 'positive' | 'neutral' | 'negative'
}

export interface ResourceAllocation {
  id: string
  allocationDate: string
  resourceType: 'therapist' | 'room' | 'equipment' | 'materials'
  resourceId: string
  allocatedToStudentId: string
  sessionId?: string
  allocationScore: number
  efficiencyMetrics: Record<string, any>
  utilizationRate: number
  allocatedFrom: string
  allocatedUntil: string
  actualDuration?: number
  satisfactionScore?: number
  outcomeQuality?: number
  createdAt: string
}

export interface AISessionNotes {
  id: string
  sessionId: string
  studentId: string
  therapistId: string
  autoGeneratedNotesAr: string
  autoGeneratedNotesEn: string
  confidenceScore: number
  modelId: string
  sessionAnalysis: Record<string, any>
  progressIndicators: string[]
  concernsIdentified: string[]
  goalAchievements: string[]
  therapistApproved: boolean
  therapistModifications?: string
  manualNotes?: string
  finalNotes?: string
  accuracyRating?: number
  usefulnessRating?: number
  createdAt: string
  reviewedAt?: string
}

export interface SmartGoalRecommendation {
  id: string
  studentId: string
  therapyProgramId: string
  goalCategory: string
  recommendedGoalAr: string
  recommendedGoalEn: string
  goalType: 'short_term' | 'long_term' | 'milestone'
  recommendationRationale: Record<string, any>
  supportingData: Record<string, any>
  confidenceScore: number
  modelId: string
  suggestedActivities: string[]
  estimatedTimelineWeeks: number
  prerequisiteGoals: string[]
  successCriteria: string[]
  status: 'suggested' | 'accepted' | 'modified' | 'rejected'
  therapistFeedback?: string
  implementationDate?: string
  actualOutcome?: string
  createdAt: string
  reviewedAt?: string
  reviewedBy?: string
}

export interface TherapyEffectivenessMetrics {
  id: string
  analysisPeriodStart: string
  analysisPeriodEnd: string
  therapyProgramId: string
  overallEffectivenessScore: number
  improvementRate: number
  goalAchievementRate: number
  sessionCompletionRate: number
  programRanking?: number
  benchmarkComparison?: number
  studentsAnalyzed: number
  significantImprovements: number
  plateauedStudents: number
  concerningCases: number
  metricsBreakdown: Record<string, any>
  demographicAnalysis: Record<string, any>
  calculatedAt: string
  calculatedByModel: string
}

export interface DashboardInsight {
  id: string
  insightType: 'trend' | 'prediction' | 'anomaly' | 'recommendation' | 'alert'
  scope: 'individual' | 'program' | 'center' | 'system'
  titleAr: string
  titleEn: string
  descriptionAr?: string
  descriptionEn?: string
  insightData: Record<string, any>
  chartType?: string
  chartConfig?: Record<string, any>
  relevanceScore: number
  priority: 'low' | 'medium' | 'high' | 'critical'
  targetAudience: string[]
  generatedByModel: string
  confidenceLevel: number
  isActive: boolean
  expiresAt?: string
  viewCount: number
  lastViewedAt?: string
  createdAt: string
}

export interface AISystemConfig {
  id: string
  configKey: string
  configValue: Record<string, any>
  descriptionAr?: string
  descriptionEn?: string
  configType: 'model' | 'threshold' | 'feature' | 'integration'
  isActive: boolean
  createdAt: string
  updatedAt: string
}

export interface ModelTrainingJob {
  id: string
  modelId: string
  jobName: string
  jobType: 'training' | 'retraining' | 'validation' | 'deployment'
  trainingParameters: Record<string, any>
  datasetInfo: Record<string, any>
  status: 'queued' | 'running' | 'completed' | 'failed' | 'cancelled'
  progressPercentage: number
  trainingMetrics?: Record<string, any>
  modelPerformance?: Record<string, any>
  errorLog?: string
  startedAt?: string
  completedAt?: string
  durationSeconds?: number
  createdAt: string
}

// Analytics Dashboard Types
export interface AnalyticsChartData {
  labels: string[]
  datasets: {
    label: string
    data: number[]
    backgroundColor?: string | string[]
    borderColor?: string
    borderWidth?: number
    fill?: boolean
    type?: string
  }[]
}

export interface AnalyticsMetric {
  id: string
  label: string
  labelAr: string
  value: number | string
  trend?: 'up' | 'down' | 'neutral'
  trendValue?: number
  format: 'number' | 'percentage' | 'currency' | 'duration'
  icon?: string
  color?: string
}

export interface AIAnalyticsDashboardData {
  overview: {
    totalRecommendations: number
    accuracyRate: number
    activeAlerts: number
    systemHealth: 'healthy' | 'degraded' | 'critical'
  }
  recommendations: TreatmentRecommendation[]
  predictions: ProgressPrediction[]
  alerts: IntelligentAlert[]
  insights: DashboardInsight[]
  effectiveness: TherapyEffectivenessMetrics[]
  charts: {
    progressTrends: AnalyticsChartData
    recommendationAccuracy: AnalyticsChartData
    alertDistribution: AnalyticsChartData
    systemPerformance: AnalyticsChartData
  }
}

// Filter and Query Types
export interface AIAnalyticsFilters {
  studentId?: string
  therapyProgramId?: string
  dateFrom?: string
  dateTo?: string
  modelId?: string
  status?: string
  alertType?: string
  severity?: string
  confidence?: {
    min: number
    max: number
  }
}

export interface AIRecommendationFilters extends AIAnalyticsFilters {
  recommendationType?: 'initial' | 'adjustment' | 'continuation' | 'transition'
  intensity?: 'low' | 'medium' | 'high' | 'intensive'
}

export interface AIPredictionFilters extends AIAnalyticsFilters {
  predictionType?: 'short_term' | 'medium_term' | 'long_term'
  riskLevel?: 'low' | 'medium' | 'high' | 'critical'
}

// API Response Types
export interface AIAnalyticsResponse<T> {
  data: T
  meta: {
    total: number
    page: number
    limit: number
    hasMore: boolean
  }
  success: boolean
  message?: string
  timestamp: string
}

export interface AIModelPerformance {
  accuracy: number
  precision: number
  recall: number
  f1Score: number
  lastEvaluated: string
  trainingDataSize: number
  validationDataSize: number
  testDataSize: number
  confusionMatrix?: number[][]
  featureImportance?: { feature: string; importance: number }[]
}

export interface AISystemHealth {
  status: 'healthy' | 'degraded' | 'critical'
  activeModels: number
  lastTraining: string
  averageResponseTime: string
  systemLoad: 'low' | 'normal' | 'high' | 'critical'
  errorRate: number
  uptime: string
  memoryUsage: number
  diskUsage: number
}

// Export grouped types for easier imports
export type AIAnalyticsTypes = {
  MLModel: MLModel
  TreatmentRecommendation: TreatmentRecommendation
  ProgressPrediction: ProgressPrediction
  IntelligentAlert: IntelligentAlert
  ScheduleOptimization: ScheduleOptimization
  ResourceAllocation: ResourceAllocation
  AISessionNotes: AISessionNotes
  SmartGoalRecommendation: SmartGoalRecommendation
  TherapyEffectivenessMetrics: TherapyEffectivenessMetrics
  DashboardInsight: DashboardInsight
  AISystemConfig: AISystemConfig
  ModelTrainingJob: ModelTrainingJob
  AIAnalyticsDashboardData: AIAnalyticsDashboardData
  AISystemHealth: AISystemHealth
}